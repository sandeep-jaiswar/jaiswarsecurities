services:
  clickhouse:
    image: clickhouse/clickhouse-server:23.8-alpine
    container_name: stock_clickhouse
    restart: unless-stopped
    env_file:
      - ./.env
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - ./database/clickhouse/init:/docker-entrypoint-initdb.d:ro
      - ./database/clickhouse/config:/etc/clickhouse-server/config.d:ro
    ports:
      - "8123:8123"
      - "9000:9000"
    networks:
      - stock_network
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8123/ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    ulimits:
      nofile:
        soft: 262144
        hard: 262144

  redis:
    image: redis:7-alpine
    container_name: stock_redis
    restart: unless-stopped
    env_file:
      - ./.env
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - stock_network
    command: >
      redis-server 
      --appendonly yes 
      --maxmemory 512mb 
      --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: stock_zookeeper
    restart: unless-stopped
    env_file:
      - ./.env
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_logs:/var/lib/zookeeper/log
    networks:
      - stock_network
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2181"]
      interval: 10s
      timeout: 5s
      retries: 3

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: stock_kafka
    restart: unless-stopped
    depends_on:
      zookeeper:
        condition: service_healthy
    env_file:
      - ./.env
    environment:
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_DELETE_TOPIC_ENABLE=true
    volumes:
      - kafka_data:/var/lib/kafka/data
    ports:
      - "9092:9092"
      - "9093:9093"
    networks:
      - stock_network
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "localhost:9092"]
      interval: 30s
      timeout: 10s
      retries: 3

  localstack:
    image: localstack/localstack:latest
    container_name: stock_localstack
    restart: unless-stopped
    env_file:
      - ./.env
    ports:
      - "4566:4566"
      - "4510-4559:4510-4559"
    volumes:
      - localstack_data:/var/lib/localstack
      - /var/run/docker.sock:/var/run/docker.sock
      - ./localstack:/etc/localstack/init/ready.d
    networks:
      - stock_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4566/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  n8n:
    image: n8nio/n8n:latest
    container_name: stock_n8n
    restart: unless-stopped
    depends_on:
      clickhouse:
        condition: service_healthy
      kafka:
        condition: service_healthy
    env_file:
      - ./.env
    ports:
      - "5678:5678"
    volumes:
      - n8n_data:/home/node/.n8n
      - ./n8n/workflows:/home/node/.n8n/workflows
    networks:
      - stock_network

  client:
    build:
      context: .
      dockerfile: ./client/Dockerfile
      target: prod
    container_name: stock_client
    restart: unless-stopped
    env_file:
      - ./.env
    ports:
      - "3001:3001"
    networks:
      - stock_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  clickhouse_data:
  redis_data:
  zookeeper_data:
  zookeeper_logs:
  kafka_data:
  n8n_data:
  localstack_data:

networks:
  stock_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
